name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: web-app/package.json
    
    - name: Install dependencies
      run: |
        cd web-app
        npm install
    
    - name: Run tests
      run: |
        cd web-app
        npm run test
    
    - name: Build application
      run: |
        cd web-app
        npm run build
    
    # Solana/Anchor steps (optional - may fail without proper setup)
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
      continue-on-error: true
    
    - name: Install Solana CLI
      run: |
        sh -c "$(curl -sSfL https://release.solana.com/v1.16.0/install)"
        echo 'export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"' >> $GITHUB_ENV
      continue-on-error: true
    
    - name: Install Anchor CLI
      run: |
        npm install -g @coral-xyz/anchor-cli
      continue-on-error: true
    
    - name: Build Anchor program
      run: |
        anchor build
      continue-on-error: true
    
    - name: Run Anchor tests
      run: |
        anchor test
      continue-on-error: true

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: web-app/package.json
    
    - name: Install dependencies
      run: |
        cd web-app
        npm install
    
    - name: Build for deployment
      run: |
        cd web-app
        npm run build
        
    # Vercel deployment commented out until secrets are configured
    # - name: Deploy to Vercel
    #   uses: amondnet/vercel-action@v20
    #   with:
    #     vercel-token: ${{ secrets.VERCEL_TOKEN }}
    #     vercel-org-id: ${{ secrets.ORG_ID }}
    #     vercel-project-id: ${{ secrets.PROJECT_ID }}
    #     working-directory: ./web-app